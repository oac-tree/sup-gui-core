# Project main configuration

include(CTest)
include(CodeTools)
include(GNUInstallDirs)
include(COASetupCodacEnvironment)
include(COASetupQt)

# -----------------------------------------------------------------------------
# C++ version
# -----------------------------------------------------------------------------
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "RelWithDebInfo")
endif()

# -----------------------------------------------------------------------------
# Variables
# -----------------------------------------------------------------------------
get_filename_component(SUP_GUI_CORE_PROJECT_DIR "${CMAKE_CURRENT_LIST_DIR}/../.." ABSOLUTE)
set(SUP_GUI_CORE_SOVERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR})
set(SUP_GUI_CORE_BUILDVERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH})
set(SUP_GUI_CORE_TESTRESULT_DIR ${CMAKE_BINARY_DIR}/test_result)

if (COA_COVERAGE)
  message(STATUS "Enabling test coverage information")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -g -fno-inline --coverage")
endif()

# -----------------------------------------------------------------------------
# Directories
# -----------------------------------------------------------------------------
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

file(MAKE_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
file(MAKE_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
file(MAKE_DIRECTORY ${SUP_GUI_CORE_TESTRESULT_DIR})

if (DEFINED TEST_OUTPUT_DIRECTORY)
  file(MAKE_DIRECTORY ${TEST_OUTPUT_DIRECTORY})
else()
  set(TEST_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
endif()

file(MAKE_DIRECTORY ${TEST_OUTPUT_DIRECTORY})

# directory for autogenerated configs
set(SUP_GUI_CORE_AUTOGEN_DIR ${CMAKE_BINARY_DIR}/autogen/sup-gui-core)
file(MAKE_DIRECTORY ${SUP_GUI_CORE_AUTOGEN_DIR})

# -----------------------------------------------------------------------------
# Dependencies
# -----------------------------------------------------------------------------
find_package(Threads)
find_package(sup-mvvm REQUIRED)
find_package(sup-gui-extra REQUIRED)
find_package(sup-dto REQUIRED)

# -----------------------------------------------------------------------------
# Generating config files
# -----------------------------------------------------------------------------
configure_file(${SUP_GUI_CORE_PROJECT_DIR}/cmake/configs/testconfig.h.in ${SUP_GUI_CORE_AUTOGEN_DIR}/testconfig.h @ONLY)
configure_file(${SUP_GUI_CORE_PROJECT_DIR}/cmake/configs/version_constants.h.in ${SUP_GUI_CORE_AUTOGEN_DIR}/version_constants.h @ONLY)
