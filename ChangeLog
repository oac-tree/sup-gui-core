Changes for 1.5.0:

- CODAC Release 7.3
- Provide undo/redo for AnyValueEditor
- COA Release v2.2, August 2024
- Implement CustomHeaderView with the possibility to reset the width of columns and persistent settings
- Embed WaveformEditor into AnyValueEditor
- Switch views to a new ItemViewComponentProvider with installable proxy models
- New cut-copy-paster machinery for AnyValueEditor
- Refactor AnyValueActionManager
- Restructure folders for better separation of testable and non-testable code
- Implement new ActionManager, AppCommand, and focus widget machinery for common action registration
- Switch AnyValueEditor to a new Project machinery and file-based projects
- Switch model strategies to a new AbstractRowStrategy
- Refactoring to decrease QWidgetAction usage
- New ActionMenu for toolbars and menus
- New lightweight Flags class
- New ProxyAction for toolbars and menus

Changes for 1.4.0:

- COA Release v2.1, March 2024
- Revise display names in AnyValue editor tree
- Implement prototype of sup-dto-editor with multiple AnyValue in tabs
- Implement project save/load
- Implement ItemStackWidget
- Implement field move up and down
- Less verbose CMake find package machinery

Changes for 1.3.0:

- Special TMCR bugfix Release, November 2023
- Fix to find system's qt5 on CODAC
- Improve performance of JSON presentation for large trees
- View model performance improvements for filtering of large trees
- Provide filtering of AnyValue tree

Changes for 1.2.0:

- COA Release v2.0, October 2023
- Provide font settings dialog and reset settings machinery
- Provide possibility to export non-pretty JSON
- Provide collapse/expand menu for a tree, provide item highlight on insert
- Add type column and allow editing of struct/array type names
- Provide correct min/max limits while editing integer scalars
- Allow insertion of empty AnyValue
- Implement action manager for easy menubar's action registration

Changes for 1.1.0:

- COA Release v1.9, August 2023
- Implement code viewer with syntax highlight
- Implement machinery for project saving
- Prototype of universal worker and manager for multi-threading task execution
- Adjustment for sup::dto v1.1 API change

Changes for 1.0.0:

- Implement AnyValueItem model
- Implement AnyValueEditor
- Implement application helpers

Changes for 0.4.0:

- Base version

